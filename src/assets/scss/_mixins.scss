@charset "UTF-8";
@import "variables";
@import "border";

// 用于设置 font-size color [line-height]
// @param $fontSize: 字号，选填，默认14px
// @param $color: 字色，选填，默认#212121, line-height为auto
// @param $lineHeight: 行高，选填，默认无
// ### 第一个参数可以直接传颜色值, 默认14号字体, 此时第二个参数为line-height
// ### 该方法必定为输出font-size和color, 不能用来设置单个属性
@mixin font ($fontSize: 14px, $color: $text-color, $lineHeight: auto) {
	@if type_of($fontSize) == "color" {
		font-size: 14px;
		color: $fontSize;
		@if type_of($color) != "number" {
			@warn "第二个参数`#{$color}`不是数字";
		} @else {
			line-height: $color;
		}
	} @else if type_of($fontSize) == "number" {
		font-size: $fontSize;
		color: $color;
		@if type_of($lineHeight) == "number" {
			line-height: $lineHeight;
		}
	} @else {
		@error "参数错误";
	}
}

// 创建一个块级格式化上下文
// @param $position: absolute，fixed
// @param $zIndex: 层级，默认无
@mixin bfc($position: absolute, $top: null, $right: "", $bottom: "", $left: "") {
	position: $position;
	@if type_of($top) == "null" {
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	} @else {
		@if type_of($top) == "number" {
			top: $top;
		}
		@if type_of($right) == "number" {
			right: $right;
		}
		@if type_of($bottom) == "number" {
			bottom: $bottom;
		}
		@if type_of($left) == "number" {
			left: $left;
		}
	}
}
